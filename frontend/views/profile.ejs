<%- include('partials/header') %>
<style>
    .yellow-bg-gradient {
        background: linear-gradient(90deg, rgb(145 110 9) 0%, rgb(255 192 8) 100%);
    }
</style>
<div class="container">
    <h1 class="mb-4">Profile of <%= profileUser.firstName; %> <%= profileUser.lastName; %></h1>
    <a href="/" class="btn btn-primary p-1 my-3">Back to User List</a>

    <table class="table table-striped">
        <tbody>
        <tr>
            <th scope="row">First Name</th>
            <td><%= profileUser.firstName; %></td>
        </tr>
        <tr>
            <th scope="row">Last Name</th>
            <td><%= profileUser.lastName; %></td>
        </tr>
        <tr>
            <th scope="row">Email</th>
            <td><%= profileUser.email; %></td>
        </tr>
        <tr>
            <th scope="row">Type</th>
            <td><%= profileUser.type; %></td>
        </tr>
        <tr>
            <th scope="row">Position</th>
            <td><%= profileUser.position; %></td>
        </tr>
        <tr>
            <th scope="row">Field</th>
            <td><%= profileUser.field ? profileUser.field.title : ''; %></td>
        </tr>
        <tr>
            <th scope="row">Description</th>
            <td><%= profileUser.description; %></td>
        </tr>
        <tr>
            <th scope="row">Education</th>
            <td><%= profileUser.education; %></td>
        </tr>
        <tr>
            <th scope="row">Experience</th>
            <td><%= profileUser.experience; %></td>
        </tr>
        <tr>
            <th scope="row">About</th>
            <td><%= profileUser.about; %></td>
        </tr>
        </tbody>
    </table>

    <% if (user.id === profileUser.id) { %>
        <a href="/profile/edit/<%= profileUser.id; %>" class="btn btn-primary">Edit Profile</a>
    <% }  else { %>
        <div>
            <h2 class="mt-4">Chat with <%= user.firstName; %></h2>
            <div id="chat-box" class="border border-2 bg-light p-4 rounded-2">
                <div id="message-list" class="d-flex flex-column">
                    <% messages.forEach(message => { %>
                        <% if (message.user.id === user.id) { %>
                            <div class="w-25 align-self-end mb-2 rounded-pill px-3 py-1 text-white yellow-bg-gradient">
                                <strong>You:</strong> <%= message.content; %></div>
                        <% } else { %>
                            <div
                                    class="w-25 mb-2 rounded-pill px-3 py-1 text-white yellow-bg-gradient"
                            >
                                <strong><%= message.user.firstName; %>:</strong> <%= message.content; %>
                            </div>
                        <% } %>
                    <% }); %>
                </div>
                <form id="chat-form" class="mt-3" onsubmit="sendMessage('<%= chat.id; %>'); return false;">
                    <input type="text" id="message-input" class="form-control" placeholder="Type a message">
                    <button type="submit" class="btn btn-warning mt-2">Send</button>
                </form>
            </div>
        </div>
    <% } %>
</div>


<%- include('partials/footer') %>
<script src="/socket.io/socket.io.js"></script>
<script>
    window.onload = function () {
        joinRoom('<%= chat.id; %>');
    };

    const socket = io();

    function joinRoom(roomName) {
        socket.emit('joinRoom', roomName);
    }

    function sendMessage(roomName) {
        const messageInput = document.getElementById('message-input');
        const message = messageInput.value.trim();
        messageInput.value = '';

        if (message !== '') {
            console.log('socket.emit')
            socket.emit('message', {
                author: { name: '<%= user.firstName; %>', id: <%= user.id; %>},
                message: message,
                roomName: roomName
            });
        }
    }

    function appendMessage(messageData) {
        const chatBox = document.getElementById('message-list');
        const messageBox = document.createElement('div');
        messageBox.classList.add('w-25', 'mb-2', 'rounded-pill', 'px-3', 'py-1', 'text-white', 'yellow-bg-gradient');

        const messageContent = document.createElement('span');
        messageContent.textContent = `${messageData.author.name}: ${messageData.message}`;

        // Determine alignment based on message author
        if (messageData.author.id === <%= user.id; %>) {
            messageBox.classList.add('align-self-end');
            messageContent.innerHTML = `<strong>You:</strong> ${messageData.message}`;
        } else {
            messageContent.innerHTML = `<strong>${messageData.author.name}:</strong> ${messageData.message}`;
        }

        messageBox.appendChild(messageContent);
        chatBox.appendChild(messageBox);
    }


    socket.on('message', (messageData) => {
        appendMessage(messageData);
    });

    socket.on('receivedMessage', (messageData) => {
        appendMessage(messageData);
    });
</script>
